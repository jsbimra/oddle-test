{"version":3,"sources":["actions/actionTypes.js","reducers/initialState.js","reducers/index.js","reducers/user-detail-reducer.js","reducers/users-reducer.js","reducers/loading-reducer.js","actions/loading-action.js","containers/loading.js","api/api.js","actions/user-action.js","containers/users-list.js","containers/search.js","components/app.js","index.js"],"names":["LOADING","LOAD_USERS_SUCCESS","initialState","loadingStatus","users","activeUser","allReducers","combineReducers","state","arguments","length","undefined","action","type","types","console","log","status","loading","Loading","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","value","react_default","a","createElement","className","props","message","Component","connect","dispatch","bindActionCreators","API","keyword","fetch","concat","then","resp","json","data","catch","err","Error","loadUsers","since","getUsers","loadUsersSuccess","selectUser","user","payload","UsersList","_this","call","isLoading","bind","assertThisInitialized","reloadAction","nextProps","loadMovies","movie","_this2","map","item","idx","href","onClick","e","preventDefault","src","avatar_url","alt","height","login","toUpperCase","ListContainerData","containers_loading","createList","Search","name","App","search","users_list","store","createStore","applyMiddleware","thunk","renderMethod","ReactDOM","hydrate","es","app","document","getElementById"],"mappings":"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","file":"static/js/main.22605a3b.chunk.js","sourcesContent":["export const LOADING = 'LOADING';\r\nexport const LOAD_USERS = 'LOAD_USERS';\r\nexport const LOAD_USERS_SUCCESS = 'LOAD_USERS_SUCCESS';\r\nexport const OPEN_MODAL = 'OPEN_MODAL'; ","export default {\r\n    loadingStatus: false,\r\n    users: [],\r\n    activeUser: {}\r\n}","import { combineReducers } from 'redux';\r\nimport LoadingReducer from './loading-reducer';\r\nimport UsersReducers from './users-reducer';\r\nimport ActiveUserReducer from './user-detail-reducer';\r\n\r\nconst allReducers = combineReducers({\r\n    activeUser: ActiveUserReducer,\r\n    users: UsersReducers,\r\n    loadingStatus: LoadingReducer,\r\n});\r\n\r\nexport default allReducers;","import * as types from '../actions/actionTypes';\r\nimport initialState from './initialState';\r\n\r\nexport default (state = initialState.activeUser, action) => {\r\n    switch (action.type) {\r\n        case types.OPEN_MODAL: {\r\n            // console.log('REDUCER: OPEN MODAL ', action);\r\n            return action.activeUser;\r\n        }   \r\n        default: \r\n            return state;\r\n    }\r\n}","import * as types from '../actions/actionTypes';\r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.users, action) {\r\n    switch (action.type) {\r\n        case types.LOAD_USERS_SUCCESS:{\r\n            console.log('REDUCER: LOAD USERS SUCCESS', action);\r\n            return action.users\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as types from '../actions/actionTypes';\r\nimport initialState from './initialState';\r\n\r\nexport default (state = initialState.loadingStatus, action) => {\r\n    switch (action.type) {\r\n        case types.LOADING: {\r\n            // console.log('REDUCER: LOADING ', action);\r\n            return action.status;\r\n        }\r\n        default: \r\n            return state;\r\n    }\r\n}","import * as types from './actionTypes';\r\n\r\nexport function loading(status) {\r\n    // console.log('ACTION: LOADING ', status);\r\n    return {\r\n        type: types.LOADING,\r\n        status\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { loading } from '../actions/loading-action';\r\n\r\nexport class Loading extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"text-center\">\r\n                <strong>{this.props.message}</strong>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        loadingStatus: state.loadingStatus\r\n    }\r\n}\r\n\r\nfunction matchDispatchToProps(dispatch) {\r\n    return bindActionCreators({\r\n        loading\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(Loading);","class API {\r\n\r\n    static getUsers(keyword = 135) {\r\n        if (keyword) {\r\n            const fetchData = fetch(`https://api.github.com/users?${keyword}`)\r\n                .then(resp => resp.json()).then(data => {\r\n                    console.log(data);\r\n                   return data ? data : ['no data response'];\r\n                })\r\n                .catch(err => new Error(err));\r\n            return fetchData\r\n        }\r\n    }\r\n}\r\n\r\nexport default API;","import * as types from './actionTypes';\r\nimport API from '../api/api';\r\nimport { loading } from './loading-action';\r\n// import { openModal } from './user-details';\r\n\r\nexport function loadUsersSuccess(users) {\r\n    return {\r\n        type: types.LOAD_USERS_SUCCESS,\r\n        users\r\n    }\r\n}\r\n\r\nexport function loadUsers(since) {\r\n    return function (dispatch) {\r\n        dispatch(loading(true));\r\n        // console.log('ACTION: LOAD BEFORE SUCCESS ');\r\n        return API.getUsers(since).then(users => {\r\n            // console.log('from loadMovies action', movies);\r\n            dispatch(loadUsersSuccess(users));\r\n            dispatch(loading(false));\r\n            // console.log('ACTION: LOAD SUCCESS ');\r\n        }).catch(err => {\r\n            throw (err);\r\n        })\r\n    }\r\n}\r\n\r\nexport const selectUser = (user) => {\r\n    console.log(`Your selected following : ${user}`);\r\n\r\n    return (dispatch) => {\r\n\r\n        // dispatch(openModal(user));\r\n\r\n        return {\r\n            type: 'USER_SELECTED',\r\n            payload: user,\r\n        }\r\n    }\r\n};\r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport Loading from './loading';\r\nimport { selectUser, loadUsers } from '../actions/user-action';\r\n\r\nclass UsersList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n    }\r\n    \r\n    this.selectUser = this.selectUser.bind(this);\r\n    this.reloadAction = this.reloadAction.bind(this);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    // console.log('COMPONENT: componentWillReceiveProps ', nextProps);\r\n    // if(this.props.loading !== nextProps.loading) {\r\n    //   this.props.loading = nextProps;\r\n    // }\r\n  }\r\n  componentDidUpdate(nextProps) {\r\n    // console.log('COMPONENT: componentDidUpdate ', nextProps);\r\n\r\n  }\r\n  componentDidMount() {\r\n    // console.log('PROPS: loading', this.props.loadingStatus)\r\n  }\r\n  reloadAction() {\r\n    this.props.loadMovies();\r\n  }\r\n  selectUser(movie) {\r\n    this.props.selectUser(movie);\r\n  }\r\n  \r\n  createList() {\r\n    if (this.props.users.length) {\r\n      return this.props.users.map((item, idx) => {\r\n        return (\r\n          <li key={idx}>\r\n            <a href=\"#\" onClick={(e) => {\r\n              e.preventDefault();\r\n              this.selectUser(item);\r\n            }}>\r\n              <img src={item.avatar_url} alt=\"user-thumb\" height=\"100px\" className=\"float-left\" />{`${item.login.toUpperCase()}`}\r\n            </a>\r\n\r\n          </li>\r\n        )\r\n      })\r\n    } else {\r\n      return (\r\n        <p className=\"text-center\">\r\n          <strong>No more records!!</strong> <br /><br />\r\n          <a href=\"#\" onClick={this.reloadAction}>Reload?</a>\r\n        </p>\r\n      )\r\n    }\r\n  }\r\n  render() {\r\n    let ListContainerData;\r\n    if (!this.props.loadingStatus) {\r\n      ListContainerData = (\r\n        <div>\r\n          <h2>Github Users List</h2>\r\n          <ul>\r\n            {this.createList()}\r\n          </ul>\r\n        </div>\r\n      );\r\n    } else {\r\n      ListContainerData = (<Loading message=\"Please wait.. we are fetching data\" />);\r\n    }\r\n\r\n    return (\r\n      <div className=\"list-container\">\r\n        {ListContainerData}\r\n      </div>\r\n      );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  // console.log('state ', state);\r\n  return {\r\n    users: state.users,\r\n    loadingStatus: state.loadingStatus,\r\n  }\r\n}\r\n\r\nfunction matchDispatchToProps(dispatch) {\r\n  return bindActionCreators({\r\n    selectUser,\r\n    loadUsers,\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(UsersList);","import React, { Component } from 'react';\r\n\r\nclass Search extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"search-panel\">\r\n                <input type=\"text\" name=\"search\" className=\"search-input\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react';\r\nimport UserList from '../containers/users-list';\r\n// import UserDetail from '../containers/user-detail';\r\nimport Search from '../containers/search';\r\nimport '../scss/style.scss';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main-wrapper\">\r\n                <Search />\r\n\r\n                <div className=\"movies-container\">\r\n                    <UserList />\r\n                </div>\r\n{/* \r\n                <div className=\"modal-wrapper\">\r\n                    <DetailModal />\r\n                </div> */}\r\n\r\n                \r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport allReducers from './reducers';\r\nimport App from './components/app';\r\nimport {loadUsers} from './actions/user-action';\r\n\r\nconst store = createStore(allReducers, applyMiddleware(thunk));\r\n\r\n//let's tell the store to dispatch our loadUsers action\r\nstore.dispatch(loadUsers(232));\r\n\r\nconst renderMethod = module.hot ? ReactDOM.render : ReactDOM.hydrate;\r\n\r\nrenderMethod(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}